name: Create android release

on:
  push:
    branches: [main]

jobs:
  properties:
    name: File properties
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Create keystore
        env:
          ZERA_KEYSTORE_B64: ${{ secrets.ZERA_KEYSTORE_B64 }}
        run: |
          cd android/app/
          echo "$ZERA_KEYSTORE_B64" > zera-keystore.jks.b64
          base64 -d -i zera-keystore.jks.b64 > zera-keystore.jks

      - name: Create local.properties
        env:
          LOCAL_PROPERTIES_B64: ${{ secrets.LOCAL_PROPERTIES_B64 }}
        run: |
          cd android/
          echo "$LOCAL_PROPERTIES_B64" > local.properties.b64
          base64 -d -i local.properties.b64 > local.properties

      - name: Create key.properties
        env:
          KEY_PROPERTIES_B64: ${{ secrets.KEY_PROPERTIES_B64 }}
        run: |
          cd android/
          echo "$KEY_PROPERTIES_B64" > key.properties.b64
          base64 -d -i key.properties.b64 > key.properties

      - name: Upload keystore
        uses: actions/upload-artifact@v2
        with:
          name: keystore
          path: android/app/zera-keystore.jks

      - name: Upload local.properties
        uses: actions/upload-artifact@v2
        with:
          name: local-properties
          path: android/local.properties

      - name: Upload key.properties
        uses: actions/upload-artifact@v2
        with:
          name: key-properties
          path: android/key.properties

  firebase:
    name: Firebase Config
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Create firebase config
        env:
          GOOGLE_SERVICE_B64: ${{ secrets.GOOGLE_SERVICE_B64 }}
        run: |
          cd android/app/
          echo "$GOOGLE_SERVICE_B64" > google_service.json.b64
          base64 -d -i google_service.json.b64 > google_service.json

      - name: Upload firebase artifacts
        uses: actions/upload-artifact@v2
        with:
          name: firebase-config-artifact
          path: android/app/google_service.json

  build:
    name: Release build
    runs-on: ubuntu-20.04
    needs: [properties, firebase]
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "2.10.1"

      - name: Download keystore
        uses: actions/download-artifact@v2
        with:
          name: keystore
          path: android/app/

      - name: Download local.properties
        uses: actions/download-artifact@v2
        with:
          name: local-properties
          path: android/

      - name: Download key.properties
        uses: actions/download-artifact@v2
        with:
          name: key-properties
          path: android/

      - name: Download firebase config artifact
        uses: actions/download-artifact@v2
        with:
          name: firebase-config-artifact
          path: android/app/

      - name: Fetch submodule
        run: git submodule update --init --recursive

      - name: Checkout main in submodule
        run: git submodule foreach git checkout main

      - name: Install dependencies
        run: flutter pub get

      - name: Install pubspec version
        run: flutter pub global activate pubspec_version

      - name: Get version
        id: pubversion
        run: echo ::set-output name=version::$(pubver get)

      - name: Build APK
        run: flutter build apk

      - name: Build APP Bundle
        run: flutter build appbundle

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: "build/app/outputs/apk/release/app-release.apk,build/app/outputs/bundle/release/app-release.aab"
          token: ${{ secrets.GH_TOKEN }}
          tag: ${{ steps.pubversion.outputs.version }}
          commit: ${{ github.sha }}
